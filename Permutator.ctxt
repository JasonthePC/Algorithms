#BlueJ class context
comment0.params=inputchars\ inArr\ inputstartpoint\ inputendpoint
comment0.target=Permutator(int,\ java.lang.String[],\ int,\ int)
comment0.text=\n\ Task\ object\ for\ permutator\n
comment1.params=inputchars\ inArr
comment1.target=Permutator(int,\ java.lang.String[])
comment1.text=\n\ Constructs\ a\ task\ object\ for\ permutator\ assuming\ that\ all\ the\ premutations\ in\ a\ given\ String\ array\ for\ a\ given\ number\ of\ character\ is\ desired\n
comment2.params=
comment2.target=void\ divide()
comment3.params=
comment3.target=int\ estimateFileSize()
comment3.text=\n\ Computes\ the\ size\ of\ a\ file\ in\ bytes\ that\ would\ be\ generated\ if\ the\ task\ object\ was\ generated\ to\ a\ file\n\ @return\ filesize\ in\ bytes\n
comment4.params=pos
comment4.target=java.lang.String\ generate(int)
comment4.text=\n\ Ignore\ object\ startpoint\ and\ endpoint\ data\ and\ rely\ on\ user\ for\ pos.\n\ NOTE\:\ Still\ needs\ symbol\ array\ and\ char\ number\ from\ object\ data\!\n\ @param\ pos\ the\ input\ to\ the\ algorithm\n\ @return\ the\ output\ of\ the\ algorithm\ at\ given\ pos\n
comment5.params=file
comment5.target=void\ generateToFile(java.lang.String)
comment5.text=\n\ Perform\ the\ task\ object\ and\ write\ the\ output\ to\ a\ file,\ inserting\ newlines\ between\ each\ output.\n\ @param\ file\ the\ file\ for\ the\ data\ to\ be\ written\ to,\ given\ as\ a\ string.\ If\ no\ path\ is\ given,\ current\ directory\ is\ used\n
comment6.params=pos
comment6.target=java.lang.String\ algorithm(int)
comment6.text=\n\ An\ algorithm\ that\ generates\ a\n
numComments=7
